{"id": 51, "train_io": {"inputs": [[[4, 4, 4], [2, 3, 2], [2, 3, 3]], [[7, 3, 3], [6, 6, 6], [3, 7, 7]], [[2, 9, 2], [4, 4, 4], [9, 9, 9]], [[2, 2, 4], [2, 2, 4], [1, 1, 1]]], "outputs": [[[5, 5, 5], [0, 0, 0], [0, 0, 0]], [[0, 0, 0], [5, 5, 5], [0, 0, 0]], [[0, 0, 0], [5, 5, 5], [5, 5, 5]], [[0, 0, 0], [0, 0, 0], [5, 5, 5]]]}, "test_io": {"inputs": [[[4, 4, 4], [3, 2, 3], [8, 8, 8]]], "outputs": [[[5, 5, 5], [0, 0, 0], [5, 5, 5]]]}, "solved": true, "generalizable": true, "anpl": "def main(input_grid: np.ndarray) -> np.ndarray:\n    \"for each row in input grid, if it is all same color, then paint it grey, else paint it black.\"(input_grid)\n    return input_grid", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef paint_rows(input_grid: np.ndarray) -> np.ndarray:\n    for row in input_grid:\n        if np.all(row == row[0]):\n            row.fill(grey)\n        else:\n            row.fill(black)\n    return input_grid\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    paint_rows(input_grid)\n    return input_grid", "name": "25d8a9c8.json", "description": {"object": "In the input, you should see...colored pattern in the grids.", "size": "The output grid size...same as the input grid size.", "description": "To make the output, you have to...fill the row with grey if the row has the same colors in the input. color the row with black if the row contain different colors.", "confidence": 9}}