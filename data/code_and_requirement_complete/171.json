{"id": 171, "train_io": {"inputs": [[[9, 1, 4], [9, 1, 4], [2, 1, 1]], [[4, 8, 4], [7, 6, 7], [8, 7, 8]], [[7, 7, 7], [9, 5, 5], [5, 1, 7]], [[2, 6, 9], [2, 6, 9], [2, 9, 2]]], "outputs": [[[9, 1, 4], [9, 1, 4], [2, 1, 1], [2, 1, 1], [9, 1, 4], [9, 1, 4]], [[4, 8, 4], [7, 6, 7], [8, 7, 8], [8, 7, 8], [7, 6, 7], [4, 8, 4]], [[7, 7, 7], [9, 5, 5], [5, 1, 7], [5, 1, 7], [9, 5, 5], [7, 7, 7]], [[2, 6, 9], [2, 6, 9], [2, 9, 2], [2, 9, 2], [2, 6, 9], [2, 6, 9]]]}, "test_io": {"inputs": [[[2, 9, 2], [8, 5, 2], [2, 2, 8]]], "outputs": [[[2, 9, 2], [8, 5, 2], [2, 2, 8], [2, 2, 8], [8, 5, 2], [2, 9, 2]]]}, "solved": true, "generalizable": true, "anpl": "def main(input_grid: np.ndarray) -> np.ndarray:\n    revert = \"flip the input pattern upside down, and return it\"(input_grid)\n    output = \"concatenate the input_grid and the revert. the input_grid is above the revert.\"(input_grid, revert)\n    return output", "python": "import numpy as np\nfrom typing import *\nblack, blue, red, green, yellow, grey, pink, orange, teal, maroon = range(10)\n\ndef concatenate_up_down(input_grid: np.ndarray, revert: np.ndarray) -> np.ndarray:\n    return np.concatenate((input_grid, revert))\n\ndef flip_upside_down(input_grid: np.ndarray) -> np.ndarray:\n    return np.flipud(input_grid)\n\ndef main(input_grid: np.ndarray) -> np.ndarray:\n    revert = flip_upside_down(input_grid)\n    output = concatenate_up_down(input_grid, revert)\n    return output", "name": "6fa7a44f.json", "description": {"object": "In the input, you should see...a 3x3 pattern.", "size": "The output grid size...is 3x6 vertical grid.", "description": "To make the output, you have to...place the input grid in the top 3x3 space and create a mirror image in the bottom 3x3 space.", "confidence": 10}}